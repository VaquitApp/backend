# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["main", "develop"]

env:
  DB_NAME: db
  DB_USER: user
  DB_PASS: postgres
  DB_HOST: localhost
  DB_PORT: 5432

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASS }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Run tests
        run: poetry run pytest -v .
